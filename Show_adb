package com.examplee.votinga;

import android.app.AlertDialog;
import android.content.Context;
import android.content.Intent;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.net.Uri;


import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import android.widget.Toast;

import com.google.android.gms.tasks.OnFailureListener;
import com.google.android.gms.tasks.OnSuccessListener;
import com.google.firebase.database.DatabaseReference;
import com.google.firebase.database.FirebaseDatabase;
import com.google.firebase.storage.FileDownloadTask;
import com.google.firebase.storage.FirebaseStorage;
import com.google.firebase.storage.StorageReference;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

import androidx.annotation.NonNull;
import androidx.recyclerview.widget.RecyclerView;

public class Show_adb extends RecyclerView.Adapter {
    private ArrayList<help> dataSet;
    Context mContext;
    int total_types;



    public static class ImageTypeViewHolder extends RecyclerView.ViewHolder {

        TextView txtType;
        ImageView image;

        ImageView call;
        ImageView show_poster;
        ImageView show_profile;
        ImageView legaldocument;
        ImageView validation;

        ImageView cancel;

        public ImageTypeViewHolder(View itemView) {
            super(itemView);

            this.txtType = (TextView) itemView.findViewById(R.id.type);
            this.image = (ImageView) itemView.findViewById(R.id.background);

            call=(ImageView)itemView.findViewById(R.id.call);
            show_poster=(ImageView)itemView.findViewById(R.id.show_poster);
            show_profile=(ImageView)itemView.findViewById(R.id.show_profile);
            legaldocument=(ImageView)itemView.findViewById(R.id.legaldocument);
            validation=(ImageView)itemView.findViewById(R.id.validation);
            cancel=(ImageView)itemView.findViewById(R.id.remove);


        }
    }



    public Show_adb(ArrayList<help> data, Context context) {
        this.dataSet = data;
        this.mContext = context;
        total_types = dataSet.size();
    }

    @Override
    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {

        View view;
        switch (viewType) {

            case help.IMAGE_TYPE:
                view = LayoutInflater.from(parent.getContext()).inflate(R.layout.item7, parent, false);
                return new ImageTypeViewHolder(view);

        }
        return null;
    }

    @Override
    public int getItemViewType(int position) {

        switch (dataSet.get(position).type) {

            case 1:
                return help.IMAGE_TYPE;

            default:
                return -1;
        }
    }

    @Override
    public void onBindViewHolder(final RecyclerView.ViewHolder holder, final int listPosition) {

        final help object = dataSet.get(listPosition);
        if (object != null) switch (object.type) {

               case help.IMAGE_TYPE:
                ((ImageTypeViewHolder) holder).txtType.setText(object.text);
                   ((ImageTypeViewHolder) holder).txtType.setText(object.text);
                   FirebaseStorage storage = FirebaseStorage.getInstance();

                   StorageReference storageRef = storage.getReference();
                   final StorageReference imageRef = storageRef.child("images/" + object.obj.getFirbase_id()+"adv");
                   try {
                       final File localFile = File.createTempFile("images", "jpg");
                       imageRef.getFile(localFile).addOnSuccessListener(new OnSuccessListener<FileDownloadTask.TaskSnapshot>() {
                           @Override
                           public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {
                               Bitmap bitmap = BitmapFactory.decodeFile(localFile.getAbsolutePath());
                               ((ImageTypeViewHolder) holder).image.setImageBitmap(bitmap);

                           }
                       }).addOnFailureListener(new OnFailureListener() {
                           @Override
                           public void onFailure(@NonNull Exception exception) {
                               Toast.makeText(mContext, imageRef.toString() + "", Toast.LENGTH_SHORT).show();

                           }
                       });
                   } catch (IOException e) {
                   }
                   ((ImageTypeViewHolder) holder).call.setOnClickListener(new View.OnClickListener() {

                       public void onClick(View view) {


                               String phone = object.obj.phone;
                               Intent intent = new Intent(Intent.ACTION_DIAL, Uri.fromParts("tel", phone, null));
                               mContext.startActivity(intent);




                       }
                   });
                   ((ImageTypeViewHolder) holder).validation.setOnClickListener(new View.OnClickListener() {

                       public void onClick(View view) {


                           final View dialogView;

                           dialogView = View.inflate(mContext, R.layout.converm, null);

                           final AlertDialog alertDialog = new AlertDialog.Builder(mContext).create();

                           Button bb= dialogView.findViewById(R.id.buttonConfirm);
                           Button bb2= dialogView.findViewById(R.id.buttonConfirm2);
                           bb2 .setOnClickListener(new View.OnClickListener() {

                               public void onClick(View view) {
                                   alertDialog.dismiss();
                               }});
                           bb. setOnClickListener(new View.OnClickListener() {

                               public void onClick(View view) {
                                   DatabaseReference s = FirebaseDatabase.getInstance().getReference("Database").child("candidate").child(object.obj.firbase_id);
                                   s.child("approved").setValue(true);
                                   Toast.makeText(mContext, "approved", Toast.LENGTH_SHORT).show();

                                   alertDialog.dismiss();

                               }});
                           alertDialog.setView(dialogView);
                           alertDialog.show();



                       }
                   });
                   ((ImageTypeViewHolder) holder).cancel.setOnClickListener(new View.OnClickListener() {

                       public void onClick(View view) {


                           final View dialogView;

                           dialogView = View.inflate(mContext, R.layout.converm, null);

                           final AlertDialog alertDialog = new AlertDialog.Builder(mContext).create();

                           Button bb= dialogView.findViewById(R.id.buttonConfirm);
                           Button bb2= dialogView.findViewById(R.id.buttonConfirm2);
                           bb2 .setOnClickListener(new View.OnClickListener() {

                               public void onClick(View view) {
                                   alertDialog.dismiss();
                               }});
                           bb. setOnClickListener(new View.OnClickListener() {

                               public void onClick(View view) {
                                   DatabaseReference s = FirebaseDatabase.getInstance().getReference("Database").child("candidate").child(object.obj.firbase_id);
                                   s.child("approved").setValue(false);
                                   Toast.makeText(mContext, "cancel approval", Toast.LENGTH_SHORT).show();

                                   alertDialog.dismiss();

                               }});
                           alertDialog.setView(dialogView);
                           alertDialog.show();



                       }
                   });
                   ((ImageTypeViewHolder) holder).show_poster.setOnClickListener(new View.OnClickListener() {


                       @Override
                       public void onClick(View view) {
                           FirebaseStorage storage = FirebaseStorage.getInstance();

                           StorageReference storageRef = storage.getReference();
                           final StorageReference imageRef = storageRef.child("images/" + object.obj.getFirbase_id());
                           try {
                               final File localFile = File.createTempFile("images", "jpg");
                               imageRef.getFile(localFile).addOnSuccessListener(new OnSuccessListener<FileDownloadTask.TaskSnapshot>() {
                                   @Override
                                   public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {
                                       Bitmap bitmap = BitmapFactory.decodeFile(localFile.getAbsolutePath());
                                       ((ImageTypeViewHolder) holder).image.setImageBitmap(bitmap);

                                   }
                               }).addOnFailureListener(new OnFailureListener() {
                                   @Override
                                   public void onFailure(@NonNull Exception exception) {
                                       Toast.makeText(mContext, imageRef.toString() + "", Toast.LENGTH_SHORT).show();

                                   }
                               });
                           } catch (IOException e) {
                           }
                       }
                   });
                   ((ImageTypeViewHolder) holder).legaldocument.setOnClickListener(new View.OnClickListener() {


                       @Override
                       public void onClick(View view) {
                           FirebaseStorage storage = FirebaseStorage.getInstance();

                           StorageReference storageRef = storage.getReference();
                           final StorageReference imageRef = storageRef.child("images/" + object.obj.getFirbase_id()+"id");
                           try {
                               final File localFile = File.createTempFile("images", "jpg");
                               imageRef.getFile(localFile).addOnSuccessListener(new OnSuccessListener<FileDownloadTask.TaskSnapshot>() {
                                   @Override
                                   public void onSuccess(FileDownloadTask.TaskSnapshot taskSnapshot) {
                                       Bitmap bitmap = BitmapFactory.decodeFile(localFile.getAbsolutePath());
                                       ((ImageTypeViewHolder) holder).image.setImageBitmap(bitmap);

                                   }
                               }).addOnFailureListener(new OnFailureListener() {
                                   @Override
                                   public void onFailure(@NonNull Exception exception) {
                                       Toast.makeText(mContext, imageRef.toString() + "", Toast.LENGTH_SHORT).show();

                                   }
                               });
                           } catch (IOException e) {
                           }
                       }
                   });


                break;

        }
    }

    @Override
    public int getItemCount() {
        return dataSet.size();
    }

}
